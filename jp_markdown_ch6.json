{
  "[JP_CHAP6_TITLE_PH]": "# 第6章：データ構造",
  "[JP_CHAP6_INTRO_P1_PH]": "これまでの章で、数値や文字列、ブール値といった基本的なデータ型と、それらを格納する変数について学んできました。しかし、実際のプログラミングでは、複数のデータをまとめて扱いたい場面がよくあります。例えば、たくさんの生徒の点数を管理したり、買い物リストを作成したりする場合です。",
  "[JP_CHAP6_INTRO_P2_PH]": "Pythonには、このような複数のデータを効率的に扱うための便利な仕組みとして、いくつかの組み込みの **データ構造 (Data Structures)** が用意されています。この章では、その中でも特によく使われる「リスト」「タプル」「辞書」「セット」について学びます。",
  "[JP_SEC6_1_TITLE_PH]": "## 6.1 リスト (Lists)",
  "[JP_SEC6_1_EXPLAIN_P1_PH]": "**リスト** は、複数の要素を順序付けて格納できる、変更可能なデータ構造です。リストの各要素には、0から始まるインデックス（添え字、位置番号）が割り当てられ、このインデックスを使って個々の要素にアクセスしたり、変更したりできます。",
  "[JP_SEC6_1_EXPLAIN_P2_PH]": "リストは角括弧 `[]` で囲み、各要素はカンマ `,` で区切って記述します。リストには、異なるデータ型の要素を混在させることも可能です。",
  "[JP_SEC6_1_EXPLAIN_ITEM1_PH]": "*   **順序がある (Ordered):** 要素が格納された順序が保持されます。",
  "[JP_SEC6_1_EXPLAIN_ITEM2_PH]": "*   **変更可能 (Mutable):** 作成後に要素を追加、削除、変更することができます。",
  "[JP_SEC6_1_EXPLAIN_ITEM3_PH]": "*   **多様な要素:** 数値、文字列、ブール値、さらには他のリストなど、様々なデータ型の値を格納できます。",
  "[JP_SEC6_1_EXPLAIN_P3_PH]": "**主な操作：**",
  "[JP_EX6_1_TITLE_PH]": "### 練習問題 6.1",
  "[JP_EX6_1_TEXT_P1_PH]": "`colors = [\"赤\", \"青\", \"緑\"]` というリストがあります。",
  "[JP_EX6_1_TEXT_P2_PH]": "このリストに対して、以下の操作を順番に行い、各操作後のリストの状態と最終的なリストを表示してください。",
  "[JP_EX6_1_STEP1_PH]": "1.  リストの最後に \"黄色\" を追加する。",
  "[JP_EX6_1_STEP2_PH]": "2.  リストの2番目の要素（インデックス1）を \"紫\" に変更する。",
  "[JP_EX6_1_STEP3_PH]": "3.  リストから \"青\" を削除する。（注意：「青」が変更された場合は、その新しい値を削除するか、または「青」がなければ何もしない、という処理を考えてみましょう。ここでは、もし「青」がリストにあれば削除し、なければ何もしない、という方針で進めてください。）",
  "[JP_EX6_1_STEP4_PH]": "4.  最終的なリストを表示する。",
  "[JP_CHECK_CODE_TITLE_EX6_1_PH]": "練習問題6.1の回答をチェック",
  "[JP_CHECK_CODE_6_1_MANUAL_PROMPT_PH]": "list_manipulation_practice() 関数を実行し、各ステップでのリストの変化と最終結果が期待通りか確認してください。",
  "[JP_SEC6_2_TITLE_PH]": "## 6.2 タプル (Tuples)",
  "[JP_SEC6_2_EXPLAIN_P1_PH]": "**タプル** は、リストとよく似ていますが、一度作成するとその内容（要素）を変更できないという大きな違いがあります。つまり、**変更不可能 (Immutable)** な順序付けられたデータのコレクションです。",
  "[JP_SEC6_2_EXPLAIN_P2_PH]": "タプルは丸括弧 `()` で囲み、各要素はカンマ `,` で区切って記述します。要素が1つだけのタプルを作成する場合は、要素の後にカンマが必要です（例：`(10,)`）。",
  "[JP_EX6_2_TITLE_PH]": "### 練習問題 6.2",
  "[JP_EX6_2_TEXT_P1_PH]": "点Pの座標を表すタプル ",
  "[JP_EX6_2_TEXT_P2_PH]": "があります。このタプルの最初の要素（x座標）と2番目の要素（y座標）をそれぞれ別の変数に代入し、「X座標： [xの値], Y座標： [yの値]」という形式で表示してください。また、このタプルの値を変更しようとするとエラーになることを、コメントアウトしたコードで試して（エラーメッセージを確認して）みましょう。",
  "[JP_CHECK_CODE_TITLE_EX6_2_PH]": "練習問題6.2の回答をチェック",
  "[JP_CHECK_CODE_6_2_MANUAL_PROMPT_PH]": "tuple_practice() 関数を実行し、座標の表示と、タプル変更時のエラー発生（コメントを外した場合）を確認してください。",
  "[JP_SEC6_3_TITLE_PH]": "## 6.3 辞書 (Dictionaries)",
  "[JP_SEC6_3_EXPLAIN_P1_PH]": "**辞書 (Dictionary)** は、キー (Key) と値 (Value) のペアでデータを格納する、変更可能なデータ構造です。リストやタプルがインデックス（数値の位置）で要素を管理するのに対し、辞書は一意なキーを使って値にアクセスします。",
  "[JP_SEC6_3_EXPLAIN_P2_PH]": "辞書は波括弧 `{}` で囲み、各ペアは `キー: 値` の形式で記述し、ペア同士はカンマ `,` で区切ります。",
  "[JP_SEC6_3_EXPLAIN_ITEM1_PH]": "*   **キーと値のペア:** 各要素はキーとそれに対応する値から成ります。",
  "[JP_SEC6_3_EXPLAIN_ITEM2_PH]": "*   **キーの一意性:** 辞書内のキーは一意でなければなりません（重複できません）。値は重複しても構いません。",
  "[JP_SEC6_3_EXPLAIN_ITEM3_PH]": "*   **変更可能 (Mutable):** 作成後にペアを追加、削除、変更することができます。",
  "[JP_EX6_3_TITLE_PH]": "### 練習問題 6.3",
  "[JP_EX6_3_TEXT_P1_PH]": "ある学生の情報を格納する辞書 ",
  "[JP_EX6_3_TEXT_P2_PH]": "があります。この辞書に対して以下の操作を順番に行い、各操作後の辞書の状態と最終的な辞書を表示してください。",
  "[JP_EX6_3_STEP1_PH]": "1.  キー \"grade\", 値 3 を追加する。",
  "[JP_EX6_3_STEP2_PH]": "2.  \"age\" の値を 21 に更新する。",
  "[JP_EX6_3_STEP3_PH]": "3.  キー \"name\" とその値を削除する。",
  "[JP_EX6_3_STEP4_PH]": "4.  最終的な辞書を表示する。",
  "[JP_CHECK_CODE_TITLE_EX6_3_PH]": "練習問題6.3の回答をチェック",
  "[JP_CHECK_CODE_6_3_MANUAL_PROMPT_PH]": "dictionary_manipulation_practice() 関数を実行し、各ステップでの辞書の変化と最終結果が期待通りか確認してください。",
  "[JP_SEC6_4_TITLE_PH]": "## 6.4 セット (Sets)",
  "[JP_SEC6_4_EXPLAIN_P1_PH]": "**セット (Set)** は、順序がなく、重複する要素を持たない変更可能なデータのコレクションです。数学の集合と似た概念です。",
  "[JP_SEC6_4_EXPLAIN_P2_PH]": "セットは波括弧 `{}` で囲んで作成しますが、辞書と区別するため、空のセットを作成する場合は `set()` 関数を使います。要素同士はカンマ `,` で区切ります。",
  "[JP_SEC6_4_EXPLAIN_P3_PH]": "主な用途は、要素の存在確認（メンバーシップテスト）や、リストなどから重複する要素を削除すること、そして集合演算（和集合、積集合、差集合など）です。",
  "[JP_EX6_4_TITLE_PH]": "### 練習問題 6.4",
  "[JP_EX6_4_TEXT_P1_PH]": "2つのセット ",
  "[JP_EX6_4_TEXT_P2_PH]": "と ",
  "[JP_EX6_4_TEXT_P3_PH]": "があります。これらのセットを使って、以下の集合演算の結果をそれぞれ表示してください。",
  "[JP_EX6_4_STEP1_PH]": "1.  numbers1 と numbers2 の和集合（両方のセットに含まれる全てのユニークな要素）。",
  "[JP_EX6_4_STEP2_PH]": "2.  numbers1 と numbers2 の積集合（両方のセットに共通して含まれる要素）。",
  "[JP_EX6_4_STEP3_PH]": "3.  numbers1 から numbers2 を引いた差集合（numbers1 には含まれるが numbers2 には含まれない要素）。",
  "[JP_CHECK_CODE_TITLE_EX6_4_PH]": "練習問題6.4の回答をチェック",
  "[JP_CHECK_CODE_6_4_MANUAL_PROMPT_PH]": "set_operations_practice() 関数を実行し、各集合演算の結果が期待通りか確認してください。"
}
